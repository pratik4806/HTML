@import url('https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&family=League+Spartan:wght@100..900&family=Open+Sans:ital,wght@0,300..800;1,300..800&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap');

body{
    margin: 30px;
    font-family: 'poppins';
}
.grid-container{
    background-color: #eee;
    max-width: 900px;
    margin: 0px auto;
    /* define the grid */
    display: grid;
    /* define the columns */
    grid-template-columns: repeat(6, 1fr);
    grid-template-rows: 100px 200px 300px;
    gap: 10px;
    justify-items: stretch;
    align-items: stretch;
}
/* >: The child combinator selects only the direct children of the preceding element. */
.grid-container > div{
    background-color: #ccc;
    text-align: center;
    padding: 20px;
    border: 1px solid #777;
}
.grid-container > div:nth-child(1){
    /* manually assign area to column */
    grid-column: 1/span 2;
}
.grid-container > div:nth-child(2){
    /* manually assign area to column */
    grid-column: span 3; 
    /* grid-column: 3   / span 3; */ 
}
.grid-container > div:nth-child(3){
    /* manually assign area to column */
    grid-column: span 1;
}
.grid-container > div:nth-child(4){
    /* manually assign area to column */
    grid-column: 2/6;
    height: 200px;
    
}
.grid-container > div:nth-child(5){
    /* manually assign area to column */
    grid-column: span 3;
    justify-self: end;
}
.grid-container > div:nth-child(6){
    /* manually assign area to column */
    grid-column: span 3;
    align-self: end;
    justify-self: end;

}

/* when the space is full out from any row the  grid item shifts to the next row automatically */